diff -ur nbd-2.9.25.orig/cliserv.h nbd-2.9.25/cliserv.h
--- nbd-2.9.25.orig/cliserv.h	2011-10-01 11:28:58.000000000 +0100
+++ nbd-2.9.25/cliserv.h	2012-07-30 11:07:34.163266605 +0100
@@ -69,7 +69,23 @@
 #ifdef	IPPROTO_TCP
 	size = 1;
 	if (setsockopt(sock, IPPROTO_TCP, TCP_NODELAY, &size, sizeof(int)) < 0)
-		 INFO("(no sockopt/2: %m)");
+	  INFO("(no sockopt/2: %m)");
+	
+	size = 1;
+        if (setsockopt(sock, SOL_SOCKET, SO_KEEPALIVE, &size, sizeof(int)) < 0)
+	  INFO("(no sockopt/2: %m)");
+	
+	size = 6;
+        if (setsockopt(sock, IPPROTO_TCP, TCP_KEEPCNT, &size, sizeof(int)) < 0)
+	  INFO("(no sockopt/2: %m)");
+       
+	size = 60;
+        if (setsockopt(sock, IPPROTO_TCP, TCP_KEEPIDLE, &size, sizeof(int)) < 0)
+	  INFO("(no sockopt/2: %m)");
+
+	size = 10;
+        if (setsockopt(sock, IPPROTO_TCP, TCP_KEEPINTVL, &size, sizeof(int)) < 0)
+          INFO("(no sockopt/2: %m)");
 #endif
 #if 0
 	size = 1024;
diff -ur nbd-2.9.25.orig/nbd-client.c nbd-2.9.25/nbd-client.c
--- nbd-2.9.25.orig/nbd-client.c	2011-10-01 11:28:58.000000000 +0100
+++ nbd-2.9.25/nbd-client.c	2012-07-30 11:08:35.243266770 +0100
@@ -344,7 +344,7 @@
 
 	logging();
 
-	while((c=getopt_long_only(argc, argv, "-b:c:d:hnN:pSst:", long_options, NULL))>=0) {
+	while((c=getopt_long_only(argc, argv, "-b:c:d:hnN:U:pSst:", long_options, NULL))>=0) {
 		switch(c) {
 		case 1:
 			// non-option argument
@@ -421,6 +421,8 @@
 		      timeout:
 			timeout=strtol(optarg, NULL, 0);
 			break;
+		case 'U': /*No-op for UUID info on ps*/
+		        break;
 		default:
 			fprintf(stderr, "E: option eaten by 42 mice\n");
 			exit(EXIT_FAILURE);
@@ -452,6 +454,7 @@
 	}
 #endif
 	do {
+#if 0
 #ifndef NOFORK
 		if (fork()) {
 			/* Due to a race, the kernel NBD driver cannot
@@ -472,6 +475,7 @@
 			exit(0);
 		}
 #endif
+#endif
 
 		if (ioctl(nbd, NBD_DO_IT) < 0) {
 			fprintf(stderr, "Kernel call returned: %m");
